/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import app.models.Kidding;
import app.screens.HealthScreen;
import app.screens.DoeKidding;
import app.utils.AppUtils;
import connector.DbConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Eco
 */
public class AddKiddingRecord extends javax.swing.JFrame {

    /**
     * Creates new form AddKiddingRecord
     */
    Kidding kidding;
    private static Connection conn;
    public AddKiddingRecord() {
        initComponents();
        kidding = new Kidding();
        
        conn = DbConnection.getConnection();
       
       AutoCompleteDecorator.decorate(goatTags);      
       AutoCompleteDecorator.decorate(kidsire);

       populateGoatTags();
       populateKidSire();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        kidsire = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateBred = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        goatTags = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        addNewKiddingBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(61, 149, 119));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("New Kidding Record");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jLabel1)
                .addContainerGap(239, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(17, 17, 17))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 60));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.add(kidsire, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 220, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setText("Goat Tag");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, -1, 30));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setText("Date Bred");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, 30));
        jPanel1.add(dateBred, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 220, 30));

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel6.setText("Kid Sire");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 60, 30));

        jPanel1.add(goatTags, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 210, -1));

        jButton1.setBackground(new java.awt.Color(255, 102, 102));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("CANCEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 140, 40));

        addNewKiddingBtn.setBackground(new java.awt.Color(61, 149, 119));
        addNewKiddingBtn.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        addNewKiddingBtn.setForeground(new java.awt.Color(255, 255, 255));
        addNewKiddingBtn.setText("ADD");
        addNewKiddingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewKiddingBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addNewKiddingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 140, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 580, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean validateText() {
        
        if (dateBred.getDate() == null ) {
            JOptionPane.showMessageDialog(null, "All fields must be filled!");
            return false;
        } else if (dateBred.getDate().compareTo(new Date()) > 0) {
            JOptionPane.showMessageDialog(null, "Please choose date which is not in the future.");
            return false;
        } else {       
            return true;
        }
    }
    
     private void populateGoatTags() {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement("SELECT * FROM `goat` WHERE `sex` = 'Female' ");
            
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()) {
                goatTags.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(AppUtils.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
     private void populateKidSire() {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement("SELECT * FROM `goat` WHERE `sex` = 'Male' ");
            
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()) {
                kidsire.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(AppUtils.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    private void addNewKiddingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewKiddingBtnActionPerformed
        
        kidding.setGoatTag(String.valueOf(goatTags.getSelectedItem()));
        kidding.setKidSire(String.valueOf(kidsire.getSelectedItem()));
        

        
        if (validateText()) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dBred = dateFormat.format(dateBred.getDate());
            kidding.setDateBred(dBred);
            
            Calendar calendar = Calendar.getInstance();
            
            try {
                calendar.setTime(dateFormat.parse(dBred));
                calendar.add(Calendar.DATE, 155); //Add estimated day of birth
                String kidDate = dateFormat.format(calendar.getTime());
                System.out.println("Estimate day: " + kidDate);
                kidding.setKiddingDate(kidDate);              
                
                AppUtils.addKidding(kidding, this);
                DoeKidding.kiddingTable.setModel(new DefaultTableModel(null, new Object[]{"ID", "Doe Tag", "Date Bred", "Kidding Date", "Sex", "Kid Name", "Kid Sire", "Birth Weight", "Tattoo", "Days Remaining"}));
                AppUtils.fillKiddingTable(DoeKidding.kiddingTable, "");
                                
            } catch (ParseException ex) {
                Logger.getLogger(AddKiddingRecord.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
             JOptionPane.showMessageDialog(null, "Please check the missing fields.");
        }
    }//GEN-LAST:event_addNewKiddingBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optiokidsire        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        // * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         //*/
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddKiddingRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddKiddingRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddKiddingRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddKiddingRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddKiddingRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewKiddingBtn;
    private com.toedter.calendar.JDateChooser dateBred;
    private javax.swing.JComboBox<String> goatTags;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> kidsire;
    // End of variables declaration//GEN-END:variables
}
